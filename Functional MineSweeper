package project186;

import java.util.Random;

public class GenerateMaze {
	
	private int mines;
	private char[][] maze;
	private int width;
	private int height;
	private char[][]playerMaze;
	private boolean gameOver;
	private boolean firstClick;
	
	public GenerateMaze(int width, int height, int mines){
		this.mines = mines;
		this.width = width;
		this.height = height;
		maze = new char [width][height];
		playerMaze = new char[width][height];
		gameOver = false;
		firstClick = true;
		
		if (this.height * this.width > mines){
			placeMines();
			placeNumbers();
			setUpPlayerMaze();
			printPlayerMaze();
		}
		else{
			System.out.println("Invalid board you idiot");
		}
	}
	private void placeMines(){
		
		int i;
		Random r = new Random();
		for (i = mines; i > 0; --i ){
			int x = r.nextInt(width);
			int y = r.nextInt(height);
			if(maze[x][y] != '*') {
				maze[x][y] = '*';
			}
			else {
				++i;
			}
		}
	}
	private void placeNumbers(){
		int i, j, k, l;
		int counter = 0; 
		for (i = 0; i < width; ++i){
			for (j = 0; j < height; ++j){
				if (maze[i][j] != '*'){
					counter = 0;
					for (k = i - 1; k <= i + 1; ++k){
						for (l = j - 1; l <= j + 1; ++l){
							if (k < 0 || l < 0 || k >= width || l >= height){
							}
							else if (maze[k][l] == '*'){
								counter = counter + 1;
							}
						}
					}
					maze[i][j] = Integer.toString(counter).charAt(0);
				}
			}
		}
	}
	public void printMaze(){
		int i,j;
		for (i = 0; i < width; ++i){ 
			System.out.println();
			for (j = 0; j < height; ++j){
				System.out.print(maze[i][j]);
			}
		}	
	}
	public void setUpPlayerMaze(){
		int i,j;
		for (i = 0; i < width; ++i){ 
			for (j = 0; j < height; ++j){
				playerMaze[i][j] = ' '; 
			}
		}
	}
	private void printPlayerMaze(){
		int i,j;
		System.out.println();
		for (i = 0; i < width; ++i){ 
			System.out.println();
			for (j = 0; j < height; ++j){
				System.out.print(playerMaze[i][j]);
			}
		}	
	}
	public void click(int column, int row){
		if((maze[column-1][row-1] == '*') && firstClick){
			while(maze[column-1][row-1] == '*'){
				clearMaze();
				placeMines();
				placeNumbers();
			}
		}
		firstClick = false;
		if (column <= width && row <= height && column > 0 && row > 0 && !gameOver){
			if (maze[column-1][row-1] == '*'){
				playerMaze[column-1][row-1] = maze[column-1][row-1];
				printPlayerMaze();
				gameOver =  true;
			}
			else if(maze[column-1][row-1] == '0'){
				playerMaze[column-1][row-1] = maze[column-1][row-1];
				printPlayerMaze();
				zeroOpener(column, row);
				
			}
			else{
				playerMaze[column-1][row-1] = maze[column-1][row-1];
				printPlayerMaze();
			}	
		}
		else {
			System.out.println("\nSpace not clickable you idiot");
		}
	}
	private void zeroOpener(int column, int row){
		int i, j;
		for(i = column - 1; i <= column + 1; ++i){
			for(j = row - 1;  j <= row + 1; ++j){
				if(i <= width && j <= height && i > 0 && j > 0){
					if(playerMaze[i-1][j-1] == ' '){
						click(i, j);
					}
				}
			}
		}
	}
	public void flag(int column, int row){
		if (column <= width && row <= height && column > 0 && row > 0 && !gameOver){
			if(playerMaze[column-1][row - 1] == ' '){
				playerMaze[column-1][row - 1] = '!';
				printPlayerMaze();
			}
		}
	}
	private void clearMaze(){
		int i,j;
		for (i = 0; i < width; ++i){ 
			for (j = 0; j < height; ++j){
				maze[i][j] = ' '; 
			}
		}
	}
	
}
